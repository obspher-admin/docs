{
  "openapi": "3.0.2",
  "info": {
    "title": "Obspher private API",
    "version": "0.0.1",
    "description": "last updated : 2024-02-22 17:20:09\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->"
  },
  "servers": [
    {
      "url": "https://obspher.dev"
    }
  ],
  "paths": {
    "/register/user/finalize": {
      "post": {
        "summary": "Finalize user registration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "string"
                  }
                },
                "required": [
                  "uid"
                ]
              },
              "example": {
                "uid": "d840fdfb-b1e1-4cb8-9296-e8d1b03cb20d"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registration is finalized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "error": {
                    "internal": "user_not_found",
                    "details": "Some details about the error"
                  }
                }
              }
            }
          },
          "417": {
            "description": "Phone call confirmation needed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "error": {
                    "internal": "phone_call_confirmation_needed",
                    "details": "Some details about the error"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unable to finalize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "error": {
                    "internal": "unable_to_finalize",
                    "details": "Some details about the error"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    },
    "/register/user/update": {
      "post": {
        "summary": "Finalize user registration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string",
                    "x-format": "wchar"
                  },
                  "last_name": {
                    "type": "string",
                    "x-format": "wchar"
                  },
                  "cgu_acceptance": {
                    "type": "boolean"
                  },
                  "pwd": {
                    "type": "string",
                    "x-format": "hexadecimal",
                    "minLength": 16,
                    "maxLength": 100
                  },
                  "salt": {
                    "type": "string",
                    "x-format": "graph",
                    "minLength": 16,
                    "maxLength": 16
                  },
                  "hash_type": {
                    "type": "string",
                    "enum": [
                      "argon2id"
                    ]
                  }
                },
                "required": [
                  "uid"
                ]
              },
              "example": {
                "uid": "d840fdfb-b1e1-4cb8-9296-e8d1b03cb20d",
                "cgu_acceptance": true
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Infos updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "missing": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "first_name",
                              "last_name",
                              "cgu_acceptance",
                              "pwd",
                              "salt",
                              "hash_type"
                            ]
                          }
                        },
                        "filled": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "first_name",
                              "last_name",
                              "cgu_acceptance",
                              "pwd",
                              "salt",
                              "hash_type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "missing",
                        "filled"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": {
                    "missing": [
                      "first_name",
                      "last_name"
                    ],
                    "filled": [
                      "cgu_acceptance",
                      "pwd",
                      "salt",
                      "hash_type"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "error": {
                    "internal": "user_not_found",
                    "details": "Some details about the error"
                  }
                }
              }
            }
          },
          "423": {
            "description": "User is pending finalize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "example": {
                  "error": {
                    "internal": "user_is_pending_finalize",
                    "details": "Some details about the error"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/paths/~1ping/get/responses/default"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "driver",
      "description": "Everything that we can do on a driver"
    },
    {
      "name": "legal",
      "description": "Everything that we can do on the legal"
    },
    {
      "name": "token",
      "description": "Connection, access token managment"
    },
    {
      "name": "delivery",
      "description": "Request new deliveries, modify, validate, and so on"
    },
    {
      "name": "company",
      "description": "Everything that we can do on a company"
    },
    {
      "name": "contract",
      "description": "Everything that we can do on contracts"
    },
    {
      "name": "vehicle",
      "description": "Everything that we can do on a vehicle"
    },
    {
      "name": "declarative",
      "description": "All declaratives"
    },
    {
      "name": "rental",
      "description": "All about rental"
    },
    {
      "name": "bin-pack",
      "description": "All about the bin packing algorithm"
    },
    {
      "name": "geography",
      "description": "All about geography (address, waypoints, ...)"
    },
    {
      "name": "equipment",
      "description": "All about equipment"
    },
    {
      "name": "professional",
      "description": "Everything that we can do on a professional / user"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "uuid": {
        "type": "string",
        "format": "uuid"
      },
      "error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "internal": {
                "type": "string"
              },
              "details": {
                "type": "string"
              }
            },
            "required": [
              "internal",
              "details"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "phone_number": {
        "type": "string",
        "minLength": 3,
        "maxLength": 16,
        "pattern": "^\\+[1-9]\\d{1,14}$"
      },
      "address": {
        "type": "object",
        "properties": {
          "recipient_name": {
            "type": "string",
            "x-format": "wchar"
          },
          "street_number": {
            "type": "string"
          },
          "street_name": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "required": [
          "recipient_name",
          "street_number",
          "street_name",
          "postal_code",
          "city",
          "country"
        ]
      },
      "delivery_waypoint": {
        "type": "object",
        "properties": {
          "contact": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string",
                "x-format": "wchar"
              },
              "last_name": {
                "type": "string",
                "x-format": "wchar"
              },
              "phone_number": {
                "$ref": "#/components/schemas/phone_number"
              }
            },
            "required": [
              "first_name",
              "last_name",
              "phone_number"
            ]
          },
          "address": {
            "type": "string",
            "format": "uuid"
          },
          "longitude": {
            "type": "number",
            "x-format": "degree_angle",
            "minimum": -180,
            "maximum": 180
          },
          "latitude": {
            "type": "number",
            "x-format": "degree_angle",
            "minimum": -90,
            "maximum": 90
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "documents_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "pattern": "^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$"
            },
            "default": []
          },
          "accessibility": {
            "type": "object",
            "properties": {
              "weight": {
                "description": "in kilograms",
                "type": "number",
                "minimum": 0
              },
              "height": {
                "description": "in meters",
                "type": "number",
                "minimum": 0
              },
              "length": {
                "description": "in meters",
                "type": "number",
                "minimum": 0
              },
              "width": {
                "description": "in meters",
                "type": "number",
                "minimum": 0
              },
              "has_pallett_truck": {
                "type": "boolean",
                "default": false
              },
              "has_elevator": {
                "type": "boolean",
                "default": false
              },
              "has_plateform": {
                "type": "boolean",
                "default": false
              }
            },
            "default": {}
          }
        },
        "required": [
          "contact",
          "address",
          "longitude",
          "latitude"
        ]
      },
      "position": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number",
            "minimum": -180,
            "maximum": 180
          },
          "latitude": {
            "type": "number",
            "minimum": -90,
            "maximum": 90
          }
        },
        "required": [
          "longitude",
          "latitude"
        ]
      },
      "right_scope": {
        "type": "string",
        "enum": [
          "full",
          "enterprise",
          "limited",
          "none"
        ]
      },
      "rights": {
        "type": "object",
        "properties": {
          "read": {
            "$ref": "#/components/schemas/right_scope"
          },
          "update": {
            "$ref": "#/components/schemas/right_scope"
          },
          "creation": {
            "$ref": "#/components/schemas/right_scope"
          },
          "deletion": {
            "$ref": "#/components/schemas/right_scope"
          }
        },
        "required": [
          "read",
          "update",
          "creation",
          "deletion"
        ]
      }
    }
  }
}